<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>

<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>로그인 화면</title>
</head>
<body>
	
	<h3>로그인하세요.</h3>
	<form action="06_loginProcess.jsp" method="post"> <!-- submit버튼을 눌렀을 때 서비스로 보여줄 페이지를 넣어주도록 한다. 
	                                          디폴트로 요청할 때는 프로젝트이름을 동일하게 지정하면서 지정한 이름을 추가해주는 구조이다.
	                                          즉, 현재 페이지와 서비스할 페이지는 같은 디렉토리 위치에 있을 때 별도로 path를 지정하지 않고 파일이름만 적어주면 되는 것이다. -->
		<!-- 웹서비스를 위해 서버에서 데이터를 꺼내올 수 있도록 jsp에서는 필수로 입력양식태그에 name속성을 구성하도록 하자!! -->
		아 이 디 : <input type="text" name="id" size="20"><br> 
		비밀번호 : <input type="password" name="pw" size="20"><br>
		<input type="submit" value="로그인">
	</form>
	<!-- 현재 디폴트로 페이지가 요청이 되어 GET방식으로 아이디와 비밀번호가 그대로 노출이 되고 있다.
		 정보에 민감한 데이터는 노출이 되면 안되는 것임 -> 즉, 민감한 데이터는 숨겨서 전달을 해야 하는 것이다.
		 그 방법이 form태그로 요청을 할 때 전송 방식에 method속성이 있는 것이고, post로 바꿔주면 된다. (디폴트가 get으로 되어 있음)
		
		 post방식으로 담아주게 되면 실질적으로 데이터를 전달하게 될 때 메시지 형태로 전송되게 되고, 
		 전송형식은 헤더와 바디의 형태로 넘어가는데 body영역에 데이터를 숨겨서 보내지게 된다.
		 
		 이때, 정보에 따른 방식을 바꿔가면서 처리하는 것보다 간단하게 모든 방식을 post방식(정보가 노출되지 않도록)으로 해야 하는 것이 아니냐는 의문이 들 수 있다.
		 post방식은 데이터를 숨겨서 전달을 하게 되는데 숨기는 과정에 액션이 취해지는 것이고 
		 그 정보를 전달받은 서버 입장에서도 그 숨겨진 영역 안으로 들어가서 데이터를 찾아서 꺼내와줘야하는 작업이 별도로 수행이 되어져야 한다.
		 
		 그 작업을 수행하기 위한 부가적인 액션이 수행되어야 하므로 퍼포먼스가 떨어지게 된다. 그래서 post방식을 지양하는 것이 좋다.
		 항상 get으로 지향을 하되 정보에 민감한 데이터일 때만 post방식으로 처리하는 것이 당연한 컨셉이 되는 것이다!!
		 
	     - 로그인 버튼을 눌렀을 때 어떤 화면을 클라이언트한테 보여줄 것인지 고려를 하고 있어야 한다. 
	       (기획단계에서 디자인부터로부터 컨셉확정되면 개발자가 UI를 구성함) -->
	
</body>
</html>