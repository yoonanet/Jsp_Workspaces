<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>메인 페이지 호출</title>
</head>
<body>
	
	<%-- 일반적으로 index.jsp페이지의 화면 구성을 하지 않는다. 
		 이 메인페이지도 여러 방법으로 구현할 수 있는 것이다 -> 그 중에서 우리는 메인페이지를 호출하도록 할 것이다
		 
		 forward액션태그를 활용하면 UI상에 표시가 나지 않기 때문에 클라이언트는 이동을 해가는지 알 수 없음.
		 기획에 따라서 이동의 방법을 선택하여 서비스가 되어지는 형식임.

		일반적으로 메인페이지에 화려한 화면을 구성하지 않고 메인페이지 요청을 받으면 최대한 간단하게 
		response.sendRedirect(응답을 보내되 브라우저에게 입력으로 전달하는 내용으로 다시 나(서버)에게 요청해달라는 메소드, 능동동작을 하는 기능)를 통해
		요청을 받는 것으로 부터 메인페이지에 대한 응답을 보내주는 형태로 시작을 한다.
		주의)스크립틀릿은 자바문법을 사용하기 때문에 콜론(;)을 꼭 써주기!! 
		
		ex) https://www.hmall.com/로 url을 요청하면 https://www.hmall.com/p/index.do로 요청이 됨. (.do는 어떤 기능이 있는 페이지로 이동하는 것인지에 대한 정보를 담아주는 것임)
		    이 형태가 우리가 만들고자 하는 구조인 것이다.
		    
		    jsp로 작성된 웹페이지는 첫페이지를 다시 요청하게끔 구조를 잡아주고 있는 것이다. (브라우저가 첫페이지를 불러주는 것과 같은 효과)
		    => 클라이언트에게 요청이 오면 sendRedirect로 작성된 페이지로 다시 요청을 하게 되는 구조임.
		    .bo를 붙여준 것은 서블릿으로 처리를 하겠다는 의도가 포함되어 있는 것이다.
		    게시판 기능: 쓰기 기능(insert / Create), 읽어갈 수 있도록 하는 기능(select / Read), 수정 기능(update / Update), 삭제 기능(delete / Delete)
		                 기본적으로 DB의 CRUD의 기능이 들어가져 있다. => 이 부분은 서비스에서 공통적으로 제공되는 기능이다.
		                 따라서 BoardWrite.bo요청이 오면 insert의 기능을 사용하려고 하는 것이다.
		                 나머지의 기능들도 요청의 이름을 Board--.bo를 통해 만들어져야 한다.
		                 
		                 위에 모든 요청을 BoardFrontController의 서블릿파일에서 처리하고자 하는 것이다.
		    
		    ● 메인 페이지 요청이 오면 서블릿에서 처리를 해주고 싶은 것임(컨트롤러의 기능을 서블릿을 통해 정의하도록 함) -> 게시판에 글을 쓰는 기능들 --%>
	<% response.sendRedirect("./BoardList.bo"); %>




















</body>
</html>

<%-- 최초 클라이언트의 요청은 서블릿(순수 자바 기술)으로 처리하는 것이다.
어떤 클라이언트 요청이고, 어떤 클래스에 어떤 메소드를 호출해야할지에 대한 상호작용을 우리가 톰캣에게 알려줬어야 했음(web.xml이나 @WebServlet를 활용했었음)
즉, 컨트롤러의 기능을 지금 jsp기술에서는 서블릿으로 처리하겠다는 것임.

회원가입 데이터가 오게되면 데이터베이스에서는 회원관리 테이블이 있어야 한다. => 그래야 회원데이터를 저장할 수 있음
이 부분을 자바라고 하는 프로그래밍 언어로 처리를 하겠다는 것임. (DB와 자바의 연동은 JDBC)
jdbc기술이 적용되어지는 파트 부분이 모델 파트가 되는 것이다.

이 모델파트 부분을 통해서 데이터를 저장하고 난 다음에 응답을 최종적으로 보내주는 화면이 클라이언트가 원하는 부분이다.(그 화면은 기획에서 확정시키면됨)
이때 보여줄 화면을 웹프로그래밍의 기술에서는 .jsp로 작업을 해주도록 한다. 이 부분이 뷰 파트이다. 
모델파트 자바빈(jdbc), 뷰파트는 jsp로 컨트롤러파트는 서블릿을 적용해서 프로젝트를 처리하려는 것이다.

이렇게 적용되어지는 것이 모델2라는 디자인 패턴인 것이다 -> MVC패턴으로 구조를 잡고있는 틀이다.
최종적으로는 게시판을 만드는 것이 목적이다.(거의 모든 기능들이 게시판을 기반으로 들어가있기 때문에 충분히 이해하도록 한다.)

***이번 실습은 어떤 흐름으로 게시판을 완성해가는지를 이해하는 것이 중요하다. 
클라이언트가 첫 메인페이지 요청이 시작!! ->서버에 메인페이지부터 가지고 있어야 하는 것임
즉, 클라이언트의 요청사항에 대한 응답에 대한 기능들이 서버에 만들어져 있어야 한다.(개발자가 생각해야할 부분)

화면을 jsp로 구성을 한다고 할 때, 프로젝트에서 최상위 폴더인 webapp에 모든 기능들의 화면들을 만든다고 할 때 
어떤 주제에 관련된 소스 코드를 포함하고 있는지의 가독성이 떨어지게 된다. 
따라서 주제별(ex.게시판) 폴더를 만들어서 이 폴더 안에 서비스의 화면인 jsp파일을 만들어주도록 한다.
 --%>



