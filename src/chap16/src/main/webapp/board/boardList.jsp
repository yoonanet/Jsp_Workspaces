<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>게시판 리스트 화면</title>
</head>
<body>

	<h3>게시판 리스트 화면입니다.</h3>

</body>
</html>

<%--
프로젝트의 주제는 분석과 연관짓기. => 실시간 서비스가 아니라서 데이터가 쌓이진 않을 것임 하지만 관심있는 사이트에서 어떤 데이터가 쌓일지 생각하면서 주제 정하기.

[필터] : jsp중급개념 (실습을 통해 필터의 처리 방법을 파악하도록 하자)
- 서비스를 전달하기 전에 필터에서 판단하여 처리하도록 함 => 개별적인 판단을 할 필요가 없음(사전 작업을 배제할 수 있음, 필터는 이벤트를 먼저 캐치해서 전처리의 기술이다.)
  
  http프로토콜 서비스의 과정에서 클라이언트가 요청하는 정보를 담아서 서비스할 수 있는 방법은 브라우저에 uri를 통해서 처리할 수 있음. 또는 바디에 담아서 처리하거나 쿼리문자열을 통해 전달하도록 한다.
  필터를 이용한다고 할 때에도 적용 동작은 클라이언트로 부터 전송되어지는 쿼리 문자열을 통해서 요청에서 필터를 거칠지 말지를 web.xml에서 처리를 해주도록 한다.
  
  ***주로 로그인을 하고난 이후에 화면을 구성할 때 주로 필터가 사용됨. (jsp의 용도)
     전처리 과정을 jsp파일에서 구성하는 것이 아닌 필터가 중간에서 해줌
     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------     
     
	 지금까지는 필터를 전혀 고려하지 않고, 브라우저를 통해서 서버로 요청을 할 때는 그 요청을 톰캣이 전달을 받았었음.
	 톰캣 안에는 jsp라는 context와 서블릿이라는 context도 있었음. => context라는 용어는 자신의 영역이라고 생각
	 그 jsp나 서블릿에 관련된 요청이 실질적으로는 모델1일때는 jsp를 요청하고 모델2일때는 서블릿을 통해서 요청에 처리가 이루어지게끔 동작이 되고 있었음
	 
	 우리는 웹컨테이너(클라이언트의 요구사항을 전달받아서 처리되어지는 주체)로 톰캣을 사용하고 있음
	 웹컨테이너 안에는 필터라는 기능을 제공해주고 있다. (톰캣안에는 서블릿컨텍스트 안에 필터가 보관되어져 있음)
	 정수기나 공기청정기를 보면 안좋은 것들을 필터로 차단해서 걸러낼 수 있도록 하는 역할을 한다. => 즉, 필터는 뭔가를 차단시켜주는 의미로 사용
	 
	 웹에서의 필터는 최종적으로 서블릿이나 jsp에 전달되기 전에, 사전에 요청을 받아서 처리를 수행할 수 있게끔 하는 역할의 기능이다. 
	 ***필터로 유용하게 사용할 수 있는 페이지는 로그인,아웃의 경우이다. 
	 기존에는 로그인을 한 사람인지 아닌지에 대한 부분을 요청을 받을 때마다 서비스단에서 판단을 하여 
	 로그인에 성공한 사람이 화면을 요청하면 응답으로 보여줘야 하고, 로그인이 안된 사람이라면 로그인을 유도하는 화면을 보여줘야 함.
	 (ex) 리스트 화면 안에서 로그인을 한사람 인지에 대한 체크를 해서 리스트 화면을 포워드해서 응답처리가 되어졌어야 했음. 사전적인 처리가 필요)
	 이때 로그인을 서비스하는 기능마다 위와 같은 처리를 해줘야 한다면 반복적인 코드가 액션마다 전부 담기게 될 것이다.
	 
	 최종적으로 서블릿과 jsp에 전달되어져 오기 전에 클라이언트의 요청이 로그인을 요구하는 서비스를 클라이언트가 받기를 기대한다면
	 필터링에서 로그인을 한 사람인지 아닌지에 대한 판단을 먼저해서 화면 응답에 대한 처리를 하도록 한다. (실질적인 로직을 구현하는 서비스단에서는 사전적인 작업의 처리들이 배제될 수 있음) 
	 => 클라이언트의 요청이 올 때 필터를 통해서 1차 검증을 수행할 수 있도록 하는 기능을 제공해주는 것이다. => 로그인여부에 따라서 어떠한 화면을 보여줄지를 결정하도록 하는 것임
	 즉, 톰캣이 이 화면을 호출하기 전에 전처리의 개념으로 필터를 이용해서 처리하는 것임.
	 jsp의 페이지는 화면 처리에만 신경을 쓰도록 하고, 필터는 그에 대한 검증을 중간에서 하는 것임.
	 
	 이 필터를 사용하려면 어떻게 필터를 사용할 수 있을까? 필터를 구동하기 위한 정보를 먼저 톰캣에게 알려주도록 한다. => web.xml을 통해 셋팅해주도록 한다.
--%>
     
     
     
     