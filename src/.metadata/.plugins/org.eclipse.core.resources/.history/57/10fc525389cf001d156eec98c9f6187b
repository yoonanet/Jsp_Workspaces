<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>자바스크립트로 Ajax 구현하기</title>

<!-- onload는 body영역을 다 읽어간 뒤에 발생하는 이벤트임 => 콜백함수이다. 
     (body영역을 다 읽어간 것은 브라우저가 먼저 알게 됨. 함수를 실행하면서 프로그래머가 읽어간 것을 확인할 수 있음) 
     ***자바스크립트에서는 이벤트가 발생했을 때 내가 함수를 등록해주면 됨 -->
<script type="text/javascript">
window.onload = function(){	
	var xhr;
	
	//모든 브라우저에서 ajax를 활용한 기능들을 범용적으로 사용할 수 있도록 아래와 같은 코드를 작성하도록 함.
	if(window.XMLHttpRewuest){ //대부분의 브라우저에는 ajax의 자료형 이름을 XMLHttpRewuest로 정의함.
		xhr = new XMLHttpRewuest();
	}else if(window.ActiveXObject){ //인터넷 익스플로러 8이하버전에서는 ajax의 자료형 이름을 ActiveXObject로 정의해주고 있음
		xhr = new ActiveXObject("Msxmi2.XMLHTTP"); //정보를 입력으로 넣어줘야 해당하는 ajax의 기능의 객체를 생성해서 반환해줌.
	}else{
		throw new Err("Ajax가 지원하지 않는 브라우저입니다.");
	}
};
</script>

</head>
<body>


	<div id="container"></div>



<!-- 
Ajax는 웹표준에 포함되는 문법으로 Ajax는 Asynchronous(비동기) javaScript and XML의 약어임(포인트는 자바스크립트인 웹표준)
=> Asynchronous가 Ajax의 핵심 포인트이다.

로그인 화면에서 아이디와 비밀번호를 넣고 로그인버튼을 누르면 로그인에 성공하면 응답으로 보낼 jsp파일이 있을 것임 
 - 같은 화면에 00님 환영합니다의 인폼을 가지고 보여질 것임
동일한 화면에서 일정 구역만 바뀌게 되는데 전체의 페이지로 인폼을 보내게 되면 비효율적임. 
 => 동기방식임(클라이언트에서 요청하면 새로운 페이지를 응답으로 보내주는 처리, 또는 새로운 페이지를 샌드리다이렉트했었음)

로그인할 때 받은 페이지는 그대로 유지하면서 일정구역만 업데이트되게끔 하는 것이 효율적이다. 
즉, 이미 응답으로 보낸 화면에서 비동기적으로 부분적인 업데이트만으로 처리하는 기술이 Ajax인 것이다. 
(새로운 화면으로만 응답하지 않고 부분적인 이벤트처리에 의해서 부분적인 처리를 비동기적으로 결과를 피드백)
 => 대표적으로 로그인 화면(항상 준비가 되어야 하는 화면이 로그인이고, 그 화면은 메인과 별도로 구성되어야 한다.)

자바스크립트가 화면에 동적효과를 부여할 수 있는 프로그래밍 언어였고, 일부분을 수정하는 것도 가능하게 하는 것임.
 즉, Ajax는 자바스크립트의 기술이다.

XML, JSON은 웹간에 데이터를 주고받고자할 때 데이터는 어떠한 포맷으로 주고 받고자 하는 약속되어져 있는 표준(네트워크상에 데이터를 주고받기 위한 표준)
***Ajax는 XMLHttpRequest(XHR) 객체로 제공을 해주고 있음 (이름은 웹서비스의 Request임. 그렇기 때문에 jsp에서 배우는 것이다.)
   객체지향으로써 위 객체는 자바스크립트 안에서 필드와 메소드를 제공해준다.
   
body영역을 다 읽어간 이후에 액션을 취하도록 한다. => window.onload를 활용 
 --> 
</body>
</html>

