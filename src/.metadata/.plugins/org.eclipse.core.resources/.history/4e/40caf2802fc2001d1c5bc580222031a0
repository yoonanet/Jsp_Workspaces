<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>동작 확인</title>
</head>
<body>

	<h1>안녕하세요, JSP...!!!</h1> 
	<%-- 내부적으로는 자바파일로 변환함, 어떻게 변환하는지 살펴볼 예정 
	     C:\workspaces\jsp\src\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\work\Catalina\localhost => chap04만 보이고 있음(서버에 올라간 파일임)
	     C:\workspaces\jsp\src\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\work\Catalina\localhost\chap04\org\apache\jsp에 java와 컴파일한 class파일이 존재
	     java파일을 보면 위와 같은 코드를 자바코드로 변환한 것을 확인할 수 있다.
	     또한, 코드에 out은 출력하기 위한 것이고 지금 클라이언트 브라우저 화면에 연결이 되어져 있어서 데이터를 출력해줌 --%>








	<%-- [jsp의 내부적인 처리 과정]
	 엄밀하게 말하면 내부에서의 처리동작은 브라우저를 띄워서 주소창에 특정 서버에 대한 파일을 요청하면 서버에 request하여 전달됨
	 -> 웹컨테이너 앞단에 웹서버가 존재하는 구조인 것이다.
	 http프로토콜 방식에 의해서 ip와 함께 8090포트로 chap04/a.jsp의 페이지를 요청을 했다고 가정을 한다면
	 만약에 톰캣이라고 하는 서버가 지금 요청한 페이지를 가지고 있을 것이다.
	 요청을 최초로 받은 웹서버는 a.jsp라고 하는 페이지가 db와 연동해서 동작이 되어져야 하거나 
	 페이지 상에 화면이 요청을 할 때마다 상세주문후기에 대한 화면을 보여줘야 한다면 최신의 정보를 포함하여 서비스를 해줘야 할 것이다. (실시간적인 화면 업데이트)
	 또한, 모든 사용자에게 동일한 페이지를 보여줘야할 것이다. (이에 대한 서비스 화면들은 DB에 저장을 하고 있을 것이다.)
	 이러한 동적인 화면을 수행해야하는 기능들을 처리하는 주체(실시간적인 화면의 요청에 따라 화면을 동적으로 전달함)가 웹콘테이너가 된다.
	 
	 화면은 크게 정적화면(변화가 없는 화면_웹표준으로만 이루어짐 ex.폼양식_회원가입양식)과 
	             동적화면(00님 환영합니다.의 화면같은 경우 서비스를 받을 사람의 이름을 출력함)으로 분류가 되어진다.
	 웹서버의 정적인 화면이 요청이 왔을 때 .html의 파일로 구성을 하면 될 것이고, 그 파일을 응답으로 보내주게 된다. (웹콘테이너까지 처리의 과정이 가지 않음)
	 
	 확장자가 .jsp일 경우에서는 웹서버가 웹콘테이너한테 처리 요청 정보를 넘겨준다. 웹콘테이너의 주 작업이 DB연동이다.-> 동적인 처리를 하기 위함! 
	 톰캣은 웹서버와 웹콘테이너로 구성된 서버인 것이다.
	 
	 최초로 a.jsp 요청하는 서비스를 받았다고 가정을 해보면 웹서버가 웹컨테이너로 넘기고 먼저 a.jsp가 있는지 찾음. 
	 있으면 톰캣은 내부에서 jsp파일을 자바코드(즉, 서블릿코드)로 변경을 한다. 그렇게 변경하는 단계를 변환단계라고 칭함
	 그렇게 컴파일을 해줌! -> .class파일이 생김 -> 그 클래스 파일을 브라우저로 전송해주게끔 서비스가 이루어지는 것이다.
	 .class파일로 만든 것을 실행을 하려면 메모리에 탑제를 시켜야함. 
	 -> 웹콘테이너가 메모리에 탑제시켜서 웹서버한테 알려주면 웹서버가 브라우저로 전송해주는 개념인 것이다.
	 즉, 서블릿의 개념은 사라진 것이 아니라 내부적으로 활용을 하고 있는 것임!!
	 
	 jsp는 자바에 기반을 둔 프로그래밍언어임 -> 자바로 동작이 되어짐. 
	 단지 자바라는 프로그래밍으로 화면을 구성하게 되면 간단한 텍스트하나 보내도 코드 작업이 번거로움 -> 외면받음 
	 => 순수자바라는 프로그래밍으로 웹서비스를 해주는 기술(자바라는 언어로 화면을 만들어줌)을 서블릿이라는 이름으로 릴리즈를 해줬었음 (처음기술임)
	 
	 [2000년초에 릴리즈됐을 시절]
	 서블릿 뿐만 아니라 asp, php라는 기술이 똑같이 웹서비스를 하기 위한 서버기술임. (쉽게 직관적으로 접근을 할 수 있었음) 
	 -> 가격이 비쌌음. 하지만 기업들이 서블릿은 어려워서 위 기술을 통해 프로젝트를 진행했음
	 
	 자바진영들이 위험성을 느끼고 추후에 발표한 것이 jsp이다. (asp, php와 동일한 형식으로 제공된 것임)
	 웹표준을 활용하는 것이 직관적임. -> html 형식틀을 가지고 있는 것이 jsp임.
	 --%>
</body>
</html>