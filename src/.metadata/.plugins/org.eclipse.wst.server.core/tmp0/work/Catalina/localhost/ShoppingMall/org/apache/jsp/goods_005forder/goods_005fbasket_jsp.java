/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-04-09 08:14:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.goods_005forder;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import net.basket.db.*;
import net.goods.db.*;

public final class goods_005fbasket_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("net.basket.db");
    _jspx_imports_packages.add("net.goods.db");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	List basketList = (ArrayList) request.getAttribute("basketlist");
	List goodsList = (ArrayList) request.getAttribute("goodslist");
	
	String item = request.getParameter("item");
	String gr_goods_num = request.getParameter("gr_goods_num");
	String isitem = request.getParameter("isitem");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>쇼핑몰</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<table width=\"960\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\"\r\n");
      out.write("	align=\"center\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=2><!-- 장바구니 -->\r\n");
      out.write("		<p align=\"center\">\r\n");
      out.write("		<form action=\"./OrderStart.or\" name=\"basketform\" method=\"post\">\r\n");
      out.write("		<input type=\"hidden\" name=\"order\" value=\"basket\">\r\n");
      out.write("		<table width=\"80%\">\r\n");
      out.write("			<tr align=center>\r\n");
      out.write("				<td><b>장 바 구 니</b></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("		<table width=\"80%\" cellpadding=\"0\" cellspacing=\"0\">\r\n");
      out.write("			<tr height=26 bgcolor=\"94d7e7\">\r\n");
      out.write("				<td height=\"3\" colspan=\"7\" align=right></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr bgcolor=\"#f0f8ff\" align=\"center\">\r\n");
      out.write("				<td width=\"5%\"><font size=\"2\">번호</font></td>\r\n");
      out.write("				<td width=\"5%\"><font size=\"2\">사진</font></td>\r\n");
      out.write("				<td width=\"25%\"><font size=\"2\">제품명</font></td>\r\n");
      out.write("				<td width=\"8%\"><font size=\"2\">수량</font></td>\r\n");
      out.write("				<td width=\"8%\"><font size=\"2\">가격</font></td>\r\n");
      out.write("				<td width=\"8%\"><font size=\"2\">취소</font></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			");

			if (basketList != null && basketList.size() != 0) {
				for (int i = 0; i < basketList.size(); i++) {
					BasketBean dto = (BasketBean) basketList.get(i);
					GoodsBean goods=(GoodsBean) goodsList.get(i);
			
      out.write("\r\n");
      out.write("			<tr align=\"center\">\r\n");
      out.write("			<td><font size=\"2\">");
      out.print(dto.getBASKET_NUM());
      out.write("</font></td>\r\n");
      out.write("			<td><font size=\"2\"><img \r\n");
      out.write("				src=\"./upload/");
      out.print(goods.getGOODS_IMAGE().split(",")[0] );
      out.write("\" \r\n");
      out.write("				width=50 height=50></font></td>\r\n");
      out.write("			<td><font size=\"2\">");
      out.print(goods.getGOODS_NAME());
      out.write("</font></td>\r\n");
      out.write("			<td><font size=\"2\">\r\n");
      out.write("				");
      out.print(dto.getBASKET_GOODS_AMOUNT());
      out.write("\r\n");
      out.write("			</font></td>\r\n");
      out.write("			<td><font size=\"2\">");
      out.print(goods.getGOODS_PRICE());
      out.write("</font></td>\r\n");
      out.write("			<td><font size=\"2\">\r\n");
      out.write("			<a href=\"BasketDelete.ba?num=");
      out.print(dto.getBASKET_NUM());
      out.write("\"\r\n");
      out.write("				onclick=\"return confirm('취소하시겠습니까?')\">취소</a>\r\n");
      out.write("			</font></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			");

				}
			}else{
			
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("			<td colspan=\"7\" align=\"center\">\r\n");
      out.write("				<font size=\"2\">장바구니에 담긴 상품이 없습니다.</font>\r\n");
      out.write("			</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			");

			}
			
      out.write("\r\n");
      out.write("		</table>\r\n");
      out.write("		\r\n");
      out.write("		<table width=\"80%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td height=\"2\" bgcolor=\"94d7e7\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("		<br>\r\n");
      out.write("		\r\n");
      out.write("		<table width=\"80%\" cellpadding=\"0\" cellspacing=\"0\">\r\n");
      out.write("			<tr>\r\n");
      out.write("			<td align=\"center\">\r\n");
      out.write("			");

			if (basketList != null && basketList.size() != 0) {
			
      out.write("\r\n");
      out.write("			<a href=\"javascript:basketform.submit()\">\r\n");
      out.write("			[구매하기]\r\n");
      out.write("			</a>\r\n");
      out.write("			");
}else{
      out.write("\r\n");
      out.write("			<a href=\"#\" onclick=\"javascript:alert('주문할 상품이 없습니다.')\">\r\n");
      out.write("			[구매하기]\r\n");
      out.write("			</a>\r\n");
      out.write("			");
}
			if (item == null) {
      out.write("\r\n");
      out.write("			<a href=\"./GoodsList.go?item=new_item\">\r\n");
      out.write("			[계속 쇼핑하기]</a>\r\n");
      out.write("			");
}else{
      out.write("\r\n");
      out.write("			<a href=\"./Goods_Detail.go?item=");
      out.print(item );
      out.write("\r\n");
      out.write("			&gr_goods_num=");
      out.print(gr_goods_num );
      out.write("\r\n");
      out.write("			&isitem=");
      out.print(isitem );
      out.write("\">\r\n");
      out.write("			[계속 쇼핑하기]</a>\r\n");
      out.write("			");
}
      out.write("\r\n");
      out.write("			</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("		</form>\r\n");
      out.write("		<!-- 장바구니 -->\r\n");
      out.write("		</p>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
