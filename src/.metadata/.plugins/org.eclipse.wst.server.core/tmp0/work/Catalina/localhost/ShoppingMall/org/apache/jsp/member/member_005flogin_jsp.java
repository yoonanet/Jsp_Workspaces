/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-04-09 08:05:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class member_005flogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>쇼핑몰</title>\r\n");
      out.write("<script>\r\n");
      out.write("function check(){\r\n");
      out.write("	var id=loginform.MEMBER_ID.value;\r\n");
      out.write("	var pass=loginform.MEMBER_PW.value;\r\n");
      out.write("	\r\n");
      out.write("	if(id.length == 0){\r\n");
      out.write("		alert(\"아이디를 입력하세요.\");\r\n");
      out.write("		loginform.MEMBER_ID.focus();\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	if(pass.length == 0){\r\n");
      out.write("		alert(\"비밀번호를 입력하세요.\");\r\n");
      out.write("		loginform.MEMBER_PW.focus();\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	return true;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function openConfirmId(loginform){	//폼에 해당하는 name을 넣어줌.\r\n");
      out.write("	var url=\"./MemberFind.me\";\r\n");
      out.write("	//window.open -> 새로운 윈도우창을 뜨도록 함. (window생략가능)\r\n");
      out.write("	open(url, \"confirm\", \"toolbar=no,location=no,status=no,menubar=no,\"+ //최근버전부터는 옵션에 해당하는 속성 지원을 아예 안함.(체크하고 있기)\r\n");
      out.write("						 \"scrollbars=no,resizable=no,width=450px,height=300\");\r\n");
      out.write("	//서버의 창을 띄우면서 서버에 url을 보내게끔 셋팅해주고 있음. 이때 띄워진 창에 이름이 confirm임.\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<table width=\"960\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\" align=\"center\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td colspan=\"2\" align=\"center\" >\r\n");
      out.write("			<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"500\">\r\n");
      out.write("				<!--회원 로그인 -->\r\n");
      out.write("				<tr>\r\n");
      out.write("					<form action=\"./MemberLoginAction.me\" method=\"post\" name=\"loginform\" onsubmit=\"return check()\">\r\n");
      out.write("					<td><br><br>\r\n");
      out.write("						<table width=\"400\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td bgcolor=\"f6f6f6\">\r\n");
      out.write("									<table width=\"400\" border=\"0\" cellspacing=\"4\" cellpadding=\"0\">\r\n");
      out.write("										<tr>\r\n");
      out.write("											<td valign=\"top\" bgcolor=\"#FFFFFF\">\r\n");
      out.write("												<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n");
      out.write("													<tr>\r\n");
      out.write("														<td align=\"center\">\r\n");
      out.write("															<table cellpadding=0 cellspacing=0 border=0>\r\n");
      out.write("																<tr>\r\n");
      out.write("																	<td width=73>아이디</td>\r\n");
      out.write("																	<td width=9>:</td>\r\n");
      out.write("																	<td width=103>\r\n");
      out.write("																		<input type=text name=\"MEMBER_ID\" size=12 maxlength=20>\r\n");
      out.write("																	</td>\r\n");
      out.write("																	<td width=66 rowspan=3><input type=\"submit\" value=\"로그인\"></td>\r\n");
      out.write("																	<td width=26 rowspan=3></td>\r\n");
      out.write("																</tr>\r\n");
      out.write("																<tr>\r\n");
      out.write("																	<td height=4 colspan=3></td>\r\n");
      out.write("																</tr>\r\n");
      out.write("																<tr>\r\n");
      out.write("																	<td width=73>비밀번호</td>\r\n");
      out.write("																	<td width=9>:</td>\r\n");
      out.write("																	<td width=103>\r\n");
      out.write("																	<input type=password name=\"MEMBER_PW\" size=12 maxlength=12>\r\n");
      out.write("																	</td>\r\n");
      out.write("																</tr>\r\n");
      out.write("																<tr>\r\n");
      out.write("																	<td height=35 colspan=6 align=\"center\">\r\n");
      out.write("																		<input\r\n");
      out.write("																			type=\"button\" value=\"회원가입\"\r\n");
      out.write("																			onclick=\"javascript:window.location='./MemberJoin.me'\"> \r\n");
      out.write("																			<!-- 자바스크립트에서 window(브라우저를 관리함)의 location객체는 윈도우즈 창에서 주소값을 관리함.(주소록 관리)\r\n");
      out.write("																			     window.location을 통해서 지정한 값은 서버에 요청하게 됨. -->\r\n");
      out.write("																		<a href=\"#\">\r\n");
      out.write("																		<input type=\"button\" value=\"아이디/비밀번호 찾기\"\r\n");
      out.write("																			onclick=\"openConfirmId(this.form)\"> <!-- 함수 호출하면서 지금 현재의 폼을 입력으로 넣도록 함 -->\r\n");
      out.write("																		</a>\r\n");
      out.write("																	</td>\r\n");
      out.write("																</tr>\r\n");
      out.write("															</table>\r\n");
      out.write("														</td>\r\n");
      out.write("													</tr>\r\n");
      out.write("													<tr>\r\n");
      out.write("														<td style=\"padding: 15 0 15 70;\">\r\n");
      out.write("														<table width=\"400\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n");
      out.write("															<tr>\r\n");
      out.write("																<td width=\"8\"><img src=\"#\" width=\"8\" height=\"7\"></td>\r\n");
      out.write("																<td width=\"392\">\r\n");
      out.write("																	<font size=2 color=\"565656\">\r\n");
      out.write("																	아이디가 없을 경우 '회원가입'을 클릭하십시오.\r\n");
      out.write("																	</font>\r\n");
      out.write("																</td>\r\n");
      out.write("															</tr>\r\n");
      out.write("															<tr>\r\n");
      out.write("																<td><img src=\"#\" width=\"8\" height=\"7\"></td>\r\n");
      out.write("																<td>\r\n");
      out.write("																	<font size=2 color=\"565656\">\r\n");
      out.write("																	아이디 또는 비밀번호를 잊어버렸을 경우 '아이디/비밀번호 찾기'를 클릭하십시오.\r\n");
      out.write("																	</font>\r\n");
      out.write("																</td>\r\n");
      out.write("															</tr>\r\n");
      out.write("														</table>\r\n");
      out.write("														</td>\r\n");
      out.write("													</tr>\r\n");
      out.write("												</table>\r\n");
      out.write("											</td>\r\n");
      out.write("										</tr>\r\n");
      out.write("									</table>\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("						</table>\r\n");
      out.write("					</td>\r\n");
      out.write("					</form>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("			<!-- 회원 로그인 -->\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
