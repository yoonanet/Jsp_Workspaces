/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-04-09 08:07:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admingoods;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class admin_005fgoods_005fwrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>쇼핑몰</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<table width=\"960\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\"\r\n");
      out.write("	bordercolor=\"gray\" align=\"center\">\r\n");
      out.write("<tr>\r\n");
      out.write("<td colspan=2>\r\n");
      out.write("<!-- 상품 등록 -->\r\n");
      out.write("<table border=\"0\" width=\"80%\">\r\n");
      out.write("<form name=\"goodsform\" action=\"./GoodsAddAction.ag\" method=\"post\" \r\n");
      out.write("	enctype=\"multipart/form-data\"> \r\n");
      out.write("	<!-- 파일첨부에서 이미지 등록하기 위해서 cos.jar에서 제공하는 multipart/form-data를 통해 셋팅\r\n");
      out.write("	     여기서의 동작들은 최종적으로 DB에 데이터들이 저장되어야 함!! -->\r\n");
      out.write("	<input type=\"hidden\" name=\"goods_best\" value=\"0\">\r\n");
      out.write("	<tr> \r\n");
      out.write("		<td>\r\n");
      out.write("			<p align=\"center\">\r\n");
      out.write("				<span style=\"font-size: 26pt;\">상 품 등 록</span> \r\n");
      out.write("				<!-- !!상품 등록 화면과 상품의 정보 테이블이 서로 매핑되어져 있어야 한다!!  -->\r\n");
      out.write("			</p>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td height=\"331\">\r\n");
      out.write("		<table border=\"1\" align=\"center\" width=\"558\">\r\n");
      out.write("			<tr>\r\n");
      out.write("			<td width=\"196\" height=\"30\">\r\n");
      out.write("				<p align=\"center\">\r\n");
      out.write("					<font size=2>카테고리</font>\r\n");
      out.write("				</p>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td width=\"346\" height=\"30\">\r\n");
      out.write("				<select name=\"goods_category\" size=\"1\">\r\n");
      out.write("					<option value=\"outwear\" selected>아웃웨어</option>\r\n");
      out.write("					<option value=\"fulldress\">정장/신사복</option>\r\n");
      out.write("					<option value=\"Tshirts\">티셔츠</option>\r\n");
      out.write("					<option value=\"shirts\">와이셔츠</option>\r\n");
      out.write("					<option value=\"pants\">팬츠</option>\r\n");
      out.write("					<option value=\"shoes\">슈즈</option>\r\n");
      out.write("				</select>\r\n");
      out.write("			</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("			<td>\r\n");
      out.write("				<p align=\"center\"><font size=2>상품이름</font></p>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td><input type=\"text\" name=\"goods_name\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>\r\n");
      out.write("				<p align=\"center\"><font size=2>판매가</font></p>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td><input type=\"text\" name=\"goods_price\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>\r\n");
      out.write("				<p align=\"center\"><font size=2>색깔</font></p>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td><input type=\"text\" name=\"goods_color\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>\r\n");
      out.write("				<p align=\"center\"><font size=2>수량</font></p>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td><input type=\"text\" name=\"goods_amount\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>\r\n");
      out.write("				<p align=\"center\"><font size=2>사이즈</font></p>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td><input type=\"text\" name=\"goods_size\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td width=\"196\">\r\n");
      out.write("				<p align=\"center\"><font size=2>제품정보</font></p>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td width=\"346\">\r\n");
      out.write("				<textarea \r\n");
      out.write("				name=\"goods_content\" cols=50 rows=15></textarea>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>\r\n");
      out.write("			<p align=\"center\"><font size=2>메인 제품이미지(gif)</font></p>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td><input type=\"file\" name=\"file4\"></td></tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("			<td>\r\n");
      out.write("			<p align=\"center\"><font size=2>제품이미지1(gif)</font></p>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td><input type=\"file\" name=\"file3\"></td></tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("			<td>\r\n");
      out.write("			<p align=\"center\"><font size=2>제품이미지2(gif)</font></p>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td><input type=\"file\" name=\"file2\"></td></tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("			<td>\r\n");
      out.write("			<p align=\"center\"><font size=2>제품이미지3(gif)</font></p>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td><input type=\"file\" name=\"file1\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td height=\"75\">\r\n");
      out.write("	<p align=\"center\"><input type=\"submit\" value=\"등록\">&nbsp;\r\n");
      out.write("	<input type=\"reset\" value=\"다시쓰기\"></p>\r\n");
      out.write("	</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>		\r\n");
      out.write("<!-- 상품 등록 -->\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
