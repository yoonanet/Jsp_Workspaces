<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Out 객체</title>
</head>
<body>

	<%
		int sum = 0;
		
		for(int i=1; i <= 1000; i++){
			sum += i;
		}
	%>
	
	
	1 ~ 1000의 합 : <%= sum %><br>
	
	<%
		sum = 0;
		for(int i=1; i <= 1000; i++) {
			if(i % 2 == 0){
				sum += i;
			}
		}
	%>
	
	1 ~ 1000의 짝수의 합 : <%= sum %><br>	
	<%-- 자바의 코드를 작성하기 위해 영역을 구분하여 기호들을 사용하는 부분들이 상당히 번거롭다.
	     => 연산된 값을 브라우저상에 출력을 하고 싶은 것이다.
	        그렇다 보니 스크립틀릿을 사용하고, 출력할 값을 표현식으로 작성하는 방식의 동작들이 반복하게 됨
	
	out이라는 객체(브라우저쪽으로 데이터를 전송하는 연결통로가 주요기능)를 보면 print, println, newLine이라는 메소드를 추가적으로 제공을 해주고 있음 (new를 하지 않더라도 다이렉트 호출 가능.)
	println메서드를 사용하면 +연산자를 활용할 수 있고, 태그도 문자열처럼 작성하여 스크립틀릿 안에서 한줄로 작성을 해줄 수 있다.
	즉, out객체를 활용하면 몇 번이고 잘라내야 했었던 코드에서 하나의 스크립틀릿에서 작성할 수 있는 간단한 소스코드작성이 가능해지는 것이다. 
	
	
	jsp를 자바파일을 변환해주는 파일에서 보면 
    실질적으로 스크립틀릿에서 작성한 코드는 톰캣이 실행하는 코드이기 때문에 
    브라우저로 전송하지 않도록 변환코드가 작성된 것을 확인할 수 있음
    body영역을 다 읽어가면 버퍼가 안찼더라도 바로 전송이 될 수 있도록 out.flush라고 코드가 작성이 되어져 있음. --%>
	
	<hr>
	
	<%
		sum = 0;
		
		for(int i=1; i <= 1000; i++){
			sum += i;
		}
		
		out.println("1 ~ 1000의 합 : "+sum+"<br>");
		
		sum = 0;
		for(int i=1; i <= 1000; i++) {
			if(i % 2 == 0){
				sum += i;
			}
		}
		
		out.println("1 ~ 1000의 짝수의 합 : "+sum+"<br>");
		
	%>












<%-- 기본객체는 9가지가 있고, 그 중 4가지를 꼭 알아둬야 한다.
     (request_클라이언트가 서버에 요청한 것에 관련된 정보로써 어떤 웹사이트를 서비스해달라는 정보까지도 메모리에 저장되어있음, 
      response_요청에 대한 응답에 관련된 정보로써 서버에 대한 이름과 
               서버에 대한 추가적인 정보들을 헤더와 함께 버퍼에 전달해야할 텍스트라인씩을 담아서 서비스할 수 있게끔 정보를 셋팅함, 
      session, out)
      
      request이 저장된 패키지 이름은 javax.servlet인데 톰캣 10버전에서는 패키지 이름을 javax에서 jakarta로 바꿨음
      10버전부터는 그 이하의 9버전과 전혀 호환이 되지 않는 것이다. 이 점을 꼭 명시!!
      스프링은 아직 javax환경만 지원한다. 스프링도 크게 보면 스프링프레임워크(우리 실습)와 스프링부트(최근에는 jakarta까지도 실행되게끔 지원을 하지만 안정적이지 않음)가 있음      
      지금 현재는 jakarta로 실습하고 있는 것임. 서블릿에서 동작을 시킬 때 스프링과 호환이 안되기 때문에 뒤에가서 확인을 해볼 예정 (히스토리 기억)
      !!실무에서는 톰캣이 9이하버전으로 작업이 되어짐!! => 내 이클립스에서 사용하려면 톰캣을 9이하버전으로 셋팅을 해야한다.
        =>자바와 서블릿의 버전을 일치시켜야 프로그램이 잘 동작이 된다는 것을 유의
      
      웹페이지에서 변환한 자바코드를 보면
      out의 객체는 out에 write를 호출하면서 텍스트형태로 자바코드를 변환하여 보여주고 있음
      \r => 맨 앞으로 가라는 의미, \n => 줄바꿈의 의미
      줄바꿈을 해서 맨 앞으로 가있으라는 윈도우에서의 의미임
      out은 출력에 의한 스트림이 연결되어져 있는 객체이다. 지금 요청해온 브라우저랑 연결이 되어있는 것이다.(ip주소를 기반으로 데이터를 전달할 연결통로를 만들어놓은 것임)
            브라우저에 데이터를 보내는 객체로 생각을 하면 된다. --%>
</body>
</html>